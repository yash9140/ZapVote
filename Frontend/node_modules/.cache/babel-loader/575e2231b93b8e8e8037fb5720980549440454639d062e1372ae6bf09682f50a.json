{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\Interaction\\\\Frontend\\\\src\\\\components\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminDashboard() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [options, setOptions] = useState(['', '']);\n  const [duration, setDuration] = useState(60);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [polls, setPolls] = useState([]);\n  const [activeSession, setActiveSession] = useState(null);\n  const [copySuccess, setCopySuccess] = useState('');\n  const navigate = useNavigate();\n  const fetchPolls = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n      console.log('API URL:', apiUrl); // Debug log\n\n      const response = await axios.get(`${apiUrl}/api/poll/history`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPolls(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error fetching polls:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch polls');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetchPolls();\n  }, [fetchPolls]);\n  const handleAddOption = () => {\n    setOptions([...options, '']);\n  };\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...options];\n    newOptions[index] = value;\n    setOptions(newOptions);\n  };\n  const handleRemoveOption = index => {\n    if (options.length > 2) {\n      const newOptions = options.filter((_, i) => i !== index);\n      setOptions(newOptions);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    // Validate inputs\n    if (!question.trim()) {\n      setError('Please enter a question');\n      setIsLoading(false);\n      return;\n    }\n    if (options.some(opt => !opt.trim())) {\n      setError('Please fill in all options');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n      console.log('API URL:', apiUrl); // Debug log\n\n      // Create the poll\n      const response = await axios.post(`${apiUrl}/api/poll/create`, {\n        question,\n        options,\n        duration\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Poll created:', response.data); // Debug log\n\n      // Automatically start a session for the new poll\n      const sessionResponse = await axios.post(`${apiUrl}/api/session/start`, {\n        pollId: response.data._id\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Session started:', sessionResponse.data); // Debug log\n\n      // Update the active session state\n      setActiveSession({\n        code: sessionResponse.data.code,\n        question: sessionResponse.data.question,\n        pollId: response.data._id\n      });\n\n      // Reset form\n      setQuestion('');\n      setOptions(['', '']);\n      setDuration(60);\n\n      // Refresh the polls list\n      fetchPolls();\n    } catch (err) {\n      var _err$response2, _err$response2$data, _err$response3, _err$response3$data;\n      console.error('Error:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to create poll and start session');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleStartSession = async pollId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n      console.log('Starting session with API URL:', apiUrl);\n      const response = await axios.post(`${apiUrl}/api/session/start`, {\n        pollId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setActiveSession({\n        code: response.data.code,\n        question: response.data.question,\n        pollId\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error starting session:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to start session');\n    }\n  };\n  const handleEndSession = async pollId => {\n    setError('');\n    setIsLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n      console.log('API URL:', apiUrl); // Debug log\n\n      await axios.post(`${apiUrl}/api/session/end`, {\n        pollId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Session ended'); // Debug log\n      setActiveSession(null);\n      fetchPolls(); // Refresh the polls list\n    } catch (err) {\n      var _err$response4, _err$response4$data, _err$response5, _err$response5$data;\n      console.error('Error ending session:', err);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Failed to end session');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    navigate('/login');\n  };\n  const handleCopyCode = () => {\n    if (activeSession !== null && activeSession !== void 0 && activeSession.code) {\n      navigator.clipboard.writeText(activeSession.code).then(() => {\n        setCopySuccess('Copied!');\n        setTimeout(() => setCopySuccess(''), 2000);\n      }).catch(err => {\n        console.error('Failed to copy:', err);\n        setCopySuccess('Failed to copy');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), activeSession && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-session\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Question:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 16\n          }, this), \" \", activeSession.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"session-code\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Session Code:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 18\n            }, this), \" \", activeSession.code]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCopyCode,\n            className: \"copy-button\",\n            children: copySuccess || 'Copy Code'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"session-instructions\",\n          children: \"Share this code with participants to join the poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-session-btn\",\n        onClick: () => handleEndSession(activeSession.pollId),\n        children: \"End Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-poll-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Question:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: question,\n            onChange: e => setQuestion(e.target.value),\n            placeholder: \"Enter your question\",\n            required: true,\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Options:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: option,\n              onChange: e => handleOptionChange(index, e.target.value),\n              placeholder: `Option ${index + 1}`,\n              required: true,\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), options.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleRemoveOption(index),\n              disabled: isLoading,\n              className: \"remove-btn\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddOption,\n            disabled: isLoading,\n            className: \"add-option-btn\",\n            children: \"Add Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Duration (seconds):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: duration,\n            onChange: e => setDuration(Number(e.target.value)),\n            min: \"10\",\n            max: \"300\",\n            required: true,\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          className: \"submit-btn\",\n          children: isLoading ? 'Creating...' : 'Create Poll'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), polls.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No polls found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"polls-grid\",\n        children: polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: poll.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", poll.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created: \", new Date(poll.createdAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this), poll.status === 'active' && !activeSession && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStartSession(poll._id),\n            disabled: isLoading,\n            className: \"start-session-btn\",\n            children: \"Start Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 19\n          }, this)]\n        }, poll._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"IvnxOjwUGuodghsyEC1vZXTPfLA=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","_s","question","setQuestion","options","setOptions","duration","setDuration","error","setError","isLoading","setIsLoading","polls","setPolls","activeSession","setActiveSession","copySuccess","setCopySuccess","navigate","fetchPolls","token","localStorage","getItem","apiUrl","process","env","REACT_APP_API_URL","console","log","response","get","headers","data","err","_err$response","_err$response$data","message","handleAddOption","handleOptionChange","index","value","newOptions","handleRemoveOption","length","filter","_","i","handleSubmit","e","preventDefault","trim","some","opt","post","sessionResponse","pollId","_id","code","_err$response2","_err$response2$data","_err$response3","_err$response3$data","handleStartSession","Authorization","_error$response","_error$response$data","handleEndSession","_err$response4","_err$response4$data","_err$response5","_err$response5$data","handleLogout","removeItem","handleCopyCode","navigator","clipboard","writeText","then","setTimeout","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","target","placeholder","required","disabled","map","option","Number","min","max","poll","status","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/Interaction/Frontend/src/components/AdminDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css';\n\nexport default function AdminDashboard() {\n  const [question, setQuestion] = useState('');\n  const [options, setOptions] = useState(['', '']);\n  const [duration, setDuration] = useState(60);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [polls, setPolls] = useState([]);\n  const [activeSession, setActiveSession] = useState(null);\n  const [copySuccess, setCopySuccess] = useState('');\n  const navigate = useNavigate();\n\n  const fetchPolls = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n      console.log('API URL:', apiUrl); // Debug log\n\n      const response = await axios.get(`${apiUrl}/api/poll/history`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPolls(response.data);\n    } catch (err) {\n      console.error('Error fetching polls:', err);\n      setError(err.response?.data?.message || 'Failed to fetch polls');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    fetchPolls();\n  }, [fetchPolls]);\n\n  const handleAddOption = () => {\n    setOptions([...options, '']);\n  };\n\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...options];\n    newOptions[index] = value;\n    setOptions(newOptions);\n  };\n\n  const handleRemoveOption = (index) => {\n    if (options.length > 2) {\n      const newOptions = options.filter((_, i) => i !== index);\n      setOptions(newOptions);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    // Validate inputs\n    if (!question.trim()) {\n      setError('Please enter a question');\n      setIsLoading(false);\n      return;\n    }\n\n    if (options.some(opt => !opt.trim())) {\n      setError('Please fill in all options');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n      console.log('API URL:', apiUrl); // Debug log\n\n      // Create the poll\n      const response = await axios.post(\n        `${apiUrl}/api/poll/create`,\n        {\n          question,\n          options,\n          duration\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      console.log('Poll created:', response.data); // Debug log\n      \n      // Automatically start a session for the new poll\n      const sessionResponse = await axios.post(\n        `${apiUrl}/api/session/start`,\n        { pollId: response.data._id },\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      console.log('Session started:', sessionResponse.data); // Debug log\n      \n      // Update the active session state\n      setActiveSession({\n        code: sessionResponse.data.code,\n        question: sessionResponse.data.question,\n        pollId: response.data._id\n      });\n\n      // Reset form\n      setQuestion('');\n      setOptions(['', '']);\n      setDuration(60);\n      \n      // Refresh the polls list\n      fetchPolls();\n    } catch (err) {\n      console.error('Error:', err);\n      setError(\n        err.response?.data?.error || \n        err.response?.data?.message || \n        'Failed to create poll and start session'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleStartSession = async (pollId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n      console.log('Starting session with API URL:', apiUrl);\n      \n      const response = await axios.post(\n        `${apiUrl}/api/session/start`,\n        { pollId },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      setActiveSession({\n        code: response.data.code,\n        question: response.data.question,\n        pollId\n      });\n    } catch (error) {\n      console.error('Error starting session:', error);\n      setError(error.response?.data?.error || 'Failed to start session');\n    }\n  };\n\n  const handleEndSession = async (pollId) => {\n    setError('');\n    setIsLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n      console.log('API URL:', apiUrl); // Debug log\n\n      await axios.post(\n        `${apiUrl}/api/session/end`,\n        { pollId },\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      console.log('Session ended'); // Debug log\n      setActiveSession(null);\n      fetchPolls(); // Refresh the polls list\n    } catch (err) {\n      console.error('Error ending session:', err);\n      setError(\n        err.response?.data?.error || \n        err.response?.data?.message || \n        'Failed to end session'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    navigate('/login');\n  };\n\n  const handleCopyCode = () => {\n    if (activeSession?.code) {\n      navigator.clipboard.writeText(activeSession.code)\n        .then(() => {\n          setCopySuccess('Copied!');\n          setTimeout(() => setCopySuccess(''), 2000);\n        })\n        .catch(err => {\n          console.error('Failed to copy:', err);\n          setCopySuccess('Failed to copy');\n        });\n    }\n  };\n\n  return (\n    <div className=\"admin-dashboard\">\n      <div className=\"dashboard-header\">\n        <h2>Admin Dashboard</h2>\n        <button onClick={handleLogout} className=\"logout-btn\">\n          Logout\n        </button>\n      </div>\n\n      {activeSession && (\n        <div className=\"active-session\">\n          <h3>Active Session</h3>\n          <div className=\"session-info\">\n            <p><strong>Question:</strong> {activeSession.question}</p>\n            <div className=\"session-code\">\n              <p><strong>Session Code:</strong> {activeSession.code}</p>\n              <button \n                onClick={handleCopyCode}\n                className=\"copy-button\"\n              >\n                {copySuccess || 'Copy Code'}\n              </button>\n            </div>\n            <p className=\"session-instructions\">Share this code with participants to join the poll</p>\n          </div>\n          <button \n            className=\"end-session-btn\"\n            onClick={() => handleEndSession(activeSession.pollId)}\n          >\n            End Session\n          </button>\n        </div>\n      )}\n\n      <div className=\"create-poll-section\">\n        <h3>Create New Poll</h3>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Question:</label>\n            <input\n              type=\"text\"\n              value={question}\n              onChange={(e) => setQuestion(e.target.value)}\n              placeholder=\"Enter your question\"\n              required\n              disabled={isLoading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Options:</label>\n            {options.map((option, index) => (\n              <div key={index} className=\"option-input\">\n                <input\n                  type=\"text\"\n                  value={option}\n                  onChange={(e) => handleOptionChange(index, e.target.value)}\n                  placeholder={`Option ${index + 1}`}\n                  required\n                  disabled={isLoading}\n                />\n                {options.length > 2 && (\n                  <button\n                    type=\"button\"\n                    onClick={() => handleRemoveOption(index)}\n                    disabled={isLoading}\n                    className=\"remove-btn\"\n                  >\n                    Remove\n                  </button>\n                )}\n              </div>\n            ))}\n            <button\n              type=\"button\"\n              onClick={handleAddOption}\n              disabled={isLoading}\n              className=\"add-option-btn\"\n            >\n              Add Option\n            </button>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Duration (seconds):</label>\n            <input\n              type=\"number\"\n              value={duration}\n              onChange={(e) => setDuration(Number(e.target.value))}\n              min=\"10\"\n              max=\"300\"\n              required\n              disabled={isLoading}\n            />\n          </div>\n\n          <button type=\"submit\" disabled={isLoading} className=\"submit-btn\">\n            {isLoading ? 'Creating...' : 'Create Poll'}\n          </button>\n        </form>\n        {error && <div className=\"error-message\">{error}</div>}\n      </div>\n\n      <div className=\"polls-section\">\n        <h3>Recent Polls</h3>\n        {polls.length === 0 ? (\n          <p>No polls found</p>\n        ) : (\n          <div className=\"polls-grid\">\n            {polls.map(poll => (\n              <div key={poll._id} className=\"poll-card\">\n                <h4>{poll.question}</h4>\n                <p>Status: {poll.status}</p>\n                <p>Created: {new Date(poll.createdAt).toLocaleString()}</p>\n                {poll.status === 'active' && !activeSession && (\n                  <button\n                    onClick={() => handleStartSession(poll._id)}\n                    disabled={isLoading}\n                    className=\"start-session-btn\"\n                  >\n                    Start Session\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}