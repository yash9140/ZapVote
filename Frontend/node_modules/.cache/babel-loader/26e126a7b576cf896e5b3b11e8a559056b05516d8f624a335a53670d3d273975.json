{"ast":null,"code":"import React from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import Login from'./components/Login';import Register from'./components/Register';import AdminDashboard from'./components/AdminDashboard';import UserJoin from'./components/UserJoin';import PollSession from'./components/PollSession';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// Protected Route component\nconst ProtectedRoute=_ref=>{let{children,requiredRole}=_ref;const token=localStorage.getItem('token');const role=localStorage.getItem('role');if(!token){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}if(requiredRole&&role!==requiredRole){return/*#__PURE__*/_jsx(Navigate,{to:\"/join\",replace:true});}return children;};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"app-container\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(ProtectedRoute,{requiredRole:\"admin\",children:/*#__PURE__*/_jsx(AdminDashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/join\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(UserJoin,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/session/:code\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(PollSession,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true})})]})})});};export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","Login","Register","AdminDashboard","UserJoin","PollSession","jsx","_jsx","jsxs","_jsxs","App","ProtectedRoute","_ref","children","requiredRole","token","localStorage","getItem","role","to","replace","className","path","element"],"sources":["C:/Users/Lenovo/Documents/Interaction/Frontend/src/App.jsx"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport AdminDashboard from './components/AdminDashboard';\r\nimport UserJoin from './components/UserJoin';\r\nimport PollSession from './components/PollSession';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  // Protected Route component\r\n  const ProtectedRoute = ({ children, requiredRole }) => {\r\n    const token = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role');\r\n\r\n    if (!token) {\r\n      return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    if (requiredRole && role !== requiredRole) {\r\n      return <Navigate to=\"/join\" replace />;\r\n    }\r\n\r\n    return children;\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app-container\">\r\n        <Routes>\r\n          {/* Public Routes */}\r\n          <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          \r\n          {/* Protected Routes */}\r\n          <Route \r\n            path=\"/admin\" \r\n            element={\r\n              <ProtectedRoute requiredRole=\"admin\">\r\n                <AdminDashboard />\r\n              </ProtectedRoute>\r\n            } \r\n          />\r\n          <Route \r\n            path=\"/join\" \r\n            element={\r\n              <ProtectedRoute>\r\n                <UserJoin />\r\n              </ProtectedRoute>\r\n            } \r\n          />\r\n          <Route \r\n            path=\"/session/:code\" \r\n            element={\r\n              <ProtectedRoute>\r\n                <PollSession />\r\n              </ProtectedRoute>\r\n            } \r\n          />\r\n\r\n          {/* Fallback Route */}\r\n          <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB;AACA,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAChD,KAAM,CAAAG,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAC,IAAI,CAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAEzC,GAAI,CAACF,KAAK,CAAE,CACV,mBAAOR,IAAA,CAACP,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,GAAIN,YAAY,EAAII,IAAI,GAAKJ,YAAY,CAAE,CACzC,mBAAOP,IAAA,CAACP,QAAQ,EAACmB,EAAE,CAAC,OAAO,CAACC,OAAO,MAAE,CAAC,CACxC,CAEA,MAAO,CAAAP,QAAQ,CACjB,CAAC,CAED,mBACEN,IAAA,CAACV,MAAM,EAAAgB,QAAA,cACLN,IAAA,QAAKc,SAAS,CAAC,eAAe,CAAAR,QAAA,cAC5BJ,KAAA,CAACX,MAAM,EAAAe,QAAA,eAELN,IAAA,CAACR,KAAK,EAACuB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEhB,IAAA,CAACP,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAE,CAAE,CAAC,cAC7Db,IAAA,CAACR,KAAK,EAACuB,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEhB,IAAA,CAACN,KAAK,GAAE,CAAE,CAAE,CAAC,cAC3CM,IAAA,CAACR,KAAK,EAACuB,IAAI,CAAC,WAAW,CAACC,OAAO,cAAEhB,IAAA,CAACL,QAAQ,GAAE,CAAE,CAAE,CAAC,cAGjDK,IAAA,CAACR,KAAK,EACJuB,IAAI,CAAC,QAAQ,CACbC,OAAO,cACLhB,IAAA,CAACI,cAAc,EAACG,YAAY,CAAC,OAAO,CAAAD,QAAA,cAClCN,IAAA,CAACJ,cAAc,GAAE,CAAC,CACJ,CACjB,CACF,CAAC,cACFI,IAAA,CAACR,KAAK,EACJuB,IAAI,CAAC,OAAO,CACZC,OAAO,cACLhB,IAAA,CAACI,cAAc,EAAAE,QAAA,cACbN,IAAA,CAACH,QAAQ,GAAE,CAAC,CACE,CACjB,CACF,CAAC,cACFG,IAAA,CAACR,KAAK,EACJuB,IAAI,CAAC,gBAAgB,CACrBC,OAAO,cACLhB,IAAA,CAACI,cAAc,EAAAE,QAAA,cACbN,IAAA,CAACF,WAAW,GAAE,CAAC,CACD,CACjB,CACF,CAAC,cAGFE,IAAA,CAACR,KAAK,EAACuB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEhB,IAAA,CAACP,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAE,CAAE,CAAC,EACvD,CAAC,CACN,CAAC,CACA,CAAC,CAEb,CAAC,CAED,cAAe,CAAAV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}